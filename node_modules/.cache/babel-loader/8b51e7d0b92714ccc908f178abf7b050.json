{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _сheckResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      body: name\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  showLikesCard(cardId, method) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: method,\n      headers: this._headers\n    }).then(res => this._сheckResponseData(res));\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._сheckResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-45',\n  headers: {\n    authorization: 'e639a24d-299a-4e69-8f0f-4d8273c25116',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_сheckResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInfo","body","name","editProfile","about","method","JSON","stringify","addNewCard","link","deleteCard","cardId","showLikesCard","updateAvatar","avatar","api","authorization"],"sources":["C:/src/ya_p/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _сheckResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._сheckResponseData(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers,\r\n      body: name,\r\n    })\r\n      .then(res => this._сheckResponseData(res))\r\n  }\r\n\r\n  editProfile(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      })\r\n    })\r\n      .then(res => this._сheckResponseData(res));\r\n  }\r\n\r\n  addNewCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link,\r\n      })\r\n    })\r\n      .then(res => this._сheckResponseData(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._сheckResponseData(res));\r\n  }\r\n\r\n  showLikesCard(cardId, method) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: method,\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._сheckResponseData(res));\r\n  }\r\n\r\n  updateAvatar(avatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      })\r\n    })\r\n      .then(res => this._сheckResponseData(res))\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-45',\r\n  headers: {\r\n    authorization: 'e639a24d-299a-4e69-8f0f-4d8273c25116',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;"],"mappings":"AAAA,MAAMA,GAAN,CAAU;EACRC,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;EACD;;EAEDC,kBAAkB,CAACC,GAAD,EAAM;IACtB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD;;EAEDC,eAAe,GAAG;IAChB,OAAOC,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;MACrCG,OAAO,EAAE,KAAKD;IADuB,CAA3B,CAAL,CAGJW,IAHI,CAGCR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CAHR,CAAP;EAID;;EAEDS,WAAW,GAAG;IACZ,OAAOF,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;MACxCG,OAAO,EAAE,KAAKD,QAD0B;MAExCa,IAAI,EAAEC;IAFkC,CAA9B,CAAL,CAIJH,IAJI,CAICR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CAJR,CAAP;EAKD;;EAEDY,WAAW,CAACD,IAAD,EAAOE,KAAP,EAAc;IACvB,OAAON,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;MACxCmB,MAAM,EAAE,OADgC;MAExChB,OAAO,EAAE,KAAKD,QAF0B;MAGxCa,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;QACnBL,IADmB;QAEnBE;MAFmB,CAAf;IAHkC,CAA9B,CAAL,CAQJL,IARI,CAQCR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CARR,CAAP;EASD;;EAEDiB,UAAU,CAACN,IAAD,EAAOO,IAAP,EAAa;IACrB,OAAOX,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;MACrCmB,MAAM,EAAE,MAD6B;MAErChB,OAAO,EAAE,KAAKD,QAFuB;MAGrCa,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;QACnBL,IADmB;QAEnBO;MAFmB,CAAf;IAH+B,CAA3B,CAAL,CAQJV,IARI,CAQCR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CARR,CAAP;EASD;;EAEDmB,UAAU,CAACC,MAAD,EAAS;IACjB,OAAOb,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAASyB,MAAO,EAAlC,EAAqC;MAC/CN,MAAM,EAAE,QADuC;MAE/ChB,OAAO,EAAE,KAAKD;IAFiC,CAArC,CAAL,CAIJW,IAJI,CAICR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CAJR,CAAP;EAKD;;EAEDqB,aAAa,CAACD,MAAD,EAASN,MAAT,EAAiB;IAC5B,OAAOP,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAASyB,MAAO,QAAlC,EAA2C;MACrDN,MAAM,EAAEA,MAD6C;MAErDhB,OAAO,EAAE,KAAKD;IAFuC,CAA3C,CAAL,CAIJW,IAJI,CAICR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CAJR,CAAP;EAKD;;EAEDsB,YAAY,CAACC,MAAD,EAAS;IACnB,OAAOhB,KAAK,CAAE,GAAE,KAAKZ,QAAS,kBAAlB,EAAqC;MAC/CmB,MAAM,EAAE,OADuC;MAE/ChB,OAAO,EAAE,KAAKD,QAFiC;MAG/Ca,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;QACnBO;MADmB,CAAf;IAHyC,CAArC,CAAL,CAOJf,IAPI,CAOCR,GAAG,IAAI,KAAKD,kBAAL,CAAwBC,GAAxB,CAPR,CAAP;EAQD;;AA7EO;;AAiFV,MAAMwB,GAAG,GAAG,IAAIhC,GAAJ,CAAQ;EAClBI,OAAO,EAAE,6CADS;EAElBE,OAAO,EAAE;IACP2B,aAAa,EAAE,sCADR;IAEP,gBAAgB;EAFT;AAFS,CAAR,CAAZ;AAQA,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}